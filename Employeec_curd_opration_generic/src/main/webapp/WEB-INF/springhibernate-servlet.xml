<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<!-- 1 = Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- 3 = Controller : This defines root package for controller classes -->
	<context:component-scan base-package="com.kcs.controller" />

	<!-- 4 = View Resolver : defines path and file type of viewresolver -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/jsp/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	
	
	<!-- 5 = Declare Benas for DAO and Services -->

	<!-- Create object for DAO and Services -->

	<beans:bean id="employeeDao" class="com.kcs.employeeDao.EmployeeDaoImpl" />
	<beans:bean id="employeeService" class="com.kcs.service.EmployeeServiceImpl" />
	
	<!-- 6 = Database Configuration -->

	<beans:bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName">
			<!-- JDBC Type 4 Driver -->
			<beans:value>com.mysql.jdbc.Driver</beans:value>
		</beans:property>
		<beans:property name="url">
			<beans:value>jdbc:mysql://localhost:3306/employeemanagement
			</beans:value>
		</beans:property>
		<beans:property name="username">
			<beans:value>root</beans:value>
		</beans:property>
		<beans:property name="password">
			<beans:value>root</beans:value>
		</beans:property>
	</beans:bean>

	<!-- 7 = Session Factory Configuration & dataSource binding and Hibernate 
		property config -->

	<beans:bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="annotatedClasses">
			<beans:list>
				<beans:value>com.kcs.model.Employee</beans:value>
			</beans:list>
		</beans:property>
		<!-- 8 = Hibernate Property Configuration -->
		<beans:property name="hibernateProperties">
			<beans:props>
				<beans:prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect
				</beans:prop>
				<beans:prop key="hibernate.show_sql">true</beans:prop>
				<beans:prop key="hibernate.format_sql">true</beans:prop>
				<beans:prop key="hibernate.hbm2ddl.auto">update</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>

	<!-- 9 = Transaction Manager Property Configuration -->

	<beans:bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<beans:property name="sessionFactory" ref="sessionFactory" />
	</beans:bean>
	
	<!--  10 - Validation Property and class configuration -->
	<beans:bean id="employeeValidator" class="com.kcs.validator.EmployeeFormValidator" />
	
	<beans:bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<beans:property name="basename" value="classpath:message" />
		<beans:property name="defaultEncoding" value="UTF-8" />
	</beans:bean>
</beans:beans>
